/*
Get the x position of the window.
Note that this is not a method but a property.
*/
App.x



/*
Get the y position of the window.
Note that this is not a method but a property.
*/
App.y



/*
Get the width of the window.
Note that this is not a method but a property.
*/
App.width



/*
Get the height of the window.
Note that this is not a method but a property.
*/
App.height



/*
Quit the application.
*/
App.quit();



/*
Minimize the application.
*/
App.minimize();



/*
Maximize the application.
*/
App.maximize();



/*
Move and resize the application.
x is an int containing the x location of the window.
y is an int containing the y location of the window.
width is an int containing the width of the window.
height is an int containing the height of the window.
*/
App.resize(x, y, width, height);



/*
Get the available width/height and the starting x/y
space of the desktop.
The method returns an array containing the values
in [x, y, width, height] order.
*/
App.availableGeometry();



/*
Set the Window title
title is a string containing the desired title
*/
App.setTitle(title);



/*
Check if a there is a saved geometry for the window.
company is a string containing the company name of the
application.
app is a string containing the application name.
Both parameters are necesary because the settings are 
retrieved using those strings as keys.
*/
App.isWindowGeometrySaveAvailable(company, app);



/*
Restore a saved geometry of the window.
company is a string containing the company name of the
application.
app is a string containing the application name.
Both parameters are necesary because the settings are 
retrieved using those strings as keys.
*/
App.restoreWindowGeometry(company, app);



/*
Save the geometry of the window.
company is a string containing the company name of the
application.
app is a string containing the application name.
Both parameters are necesary because the settings are 
stored using those strings as keys.
*/
App.saveWindowGeometry(company, app);
